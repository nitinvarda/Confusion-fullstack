{"version":3,"sources":["redux/ActionCreators.js","redux/ActionTypes.js","components/HeaderComponent.js","components/LoadingComponent.js","components/MenuComponent.js","components/HomeComponent.js","utilities/Rating.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/FavoriteComponent.js","components/ReserationComponent.js","components/MainComponent.js","redux/dishes.js","redux/promotions.js","redux/leaders.js","redux/comments.js","redux/forms.js","redux/login.js","redux/favorites.js","redux/reservations.js","components/FooterComponent.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["fetchDishes","dispatch","a","type","axios","get","response","payload","data","delFavorite","id","getState","token","login","config","headers","Authorization","delete","getFavorites","getReservations","reservation","connect","state","loggedIn","email","password","post","loginUser","addReservation","guests","smoking","date","logout","props","useState","isModalOpen","setIsModalOpen","isReserveModalOpen","setIsReserveModalOpen","setEmail","setPassword","remember","setRemember","setGuests","setSmoking","setDate","useEffect","user","JSON","parse","localStorage","getItem","toggleModal","toggleReserveModal","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","className","src","height","width","alt","Toggle","aria-controls","Collapse","Nav","to","isAuthenticated","Link","Button","onClick","Jumbotron","Row","Col","xs","md","size","Modal","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","event","preventDefault","details","setItem","stringify","Group","Label","htmlFor","Control","placeholder","value","onChange","e","target","Check","checked","label","color","as","Loading","RenderMenuItem","dish","match","Card","_id","style","textDecoration","Img","image","name","ImgOverlay","backgroundColor","display","flexDirection","justifyContent","textAlign","Text","description","dishes","isLoading","errMess","Breadcrumb","Item","active","map","key","RenderCard","item","in","transformProps","exitTransform","designation","Subtitle","leaders","promotions","length","Rating","text","defaultProps","RenderDish","isModal","setIsModal","favorite","favorites","filter","toString","addFavorite","marginBottom","addComment","rating","comment","dishWithId","dishId","postComment","CommentForm","handleSubmit","bind","this","comments","author","setState","rows","Component","RenderComments","AlreadyCommented","username","createdAt","substring","delComment","firstname","dishIdFetch","method","url","commentId","params","Contact","role","RenderLeaders","Media","Image","leader","leadersLoading","leadersErrMess","title","fav","reservations","delReservation","Table","striped","bordered","hover","index","Main","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","Home","exact","resetFeedbackForm","postFeedback","DishdetailComponent","FavoriteComponent","ReservationComponent","withRouter","initialState","Dishes","action","initialDishState","Promotions","Leaders","Status","InitialFeedback","lastname","telnum","agree","contectType","message","removeItem","addStatus","delStatus","FooterComponent","store","createStore","combineReducers","createForms","feedback","composeWithDevTools","applyMiddleware","thunk","logger","App","MainComponent","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.af33d56a.chunk.js","sourcesContent":["\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nexport const fetchDishes = () => async (dispatch) => {\r\n    dispatch({ type: ActionTypes.DISHES_LOADING })\r\n    try {\r\n\r\n        const response = await axios.get('/dishes')\r\n        dispatch({ type: ActionTypes.DISHES_SUCCESS, payload: response.data })\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.DISHES_FAILED, payload: err })\r\n    }\r\n}\r\n\r\n\r\nexport const fetchLeaders = () => async (dispatch) => {\r\n    dispatch({ type: ActionTypes.LEADERS_LOADING })\r\n\r\n    try {\r\n        const response = await axios.get('/leaders')\r\n        dispatch({ type: ActionTypes.LEADERS_SUCCESS, payload: response.data })\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.LEADERS_FAILED, payload: err })\r\n    }\r\n}\r\n\r\nexport const fetchPromos = () => async (dispatch) => {\r\n    dispatch({ type: ActionTypes.PROMOS_LOADING })\r\n\r\n    try {\r\n        const response = await axios.get('/promotions')\r\n        dispatch({ type: ActionTypes.PROMOS_SUCCESS, payload: response.data })\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.PROMOS_FAILED, payload: err })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const dishWithId = (dishId) => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.DISH_WITH_ID_LOADING })\r\n\r\n\r\n    try {\r\n\r\n        const response = await axios.get(\"/dishes/\" + dishId)\r\n\r\n        dispatch({ type: ActionTypes.DISH_WITH_ID_SUCCESS, payload: response.data })\r\n        // dispatch(commentsWithId(dishId))\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.DISH_WITH_ID_FAILED, payload: err })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    dispatch({ type: ActionTypes.LOGIN_USER_LOADING })\r\n\r\n    try {\r\n        const response = await axios.post(\"/users/signin\", { email, password })\r\n        dispatch({ type: ActionTypes.LOGIN_USER_SUCCESS, payload: response.data })\r\n        dispatch(getFavorites())\r\n        dispatch(getReservations())\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.LOGIN_USER_FAILED, payload: err })\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n    dispatch({ type: ActionTypes.LOGOUT_USER })\r\n\r\n\r\n}\r\n\r\n\r\nexport const addFavorite = (id) => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.ADD_FAVORITE_LOADING })\r\n\r\n    try {\r\n        const { login: { token } } = getState()\r\n\r\n\r\n\r\n        const response = await axios({ method: 'post', url: '/favorites/' + id, headers: { 'Authorization': 'Bearer ' + token } })\r\n\r\n        dispatch({ type: ActionTypes.ADD_FAVORITE_SUCCESS, payload: response.data })\r\n        dispatch(getFavorites())\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.ADD_FAVORITE_FAILED, payload: err })\r\n    }\r\n}\r\n\r\n\r\nexport const delFavorite = (id) => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.DELETE_FAVORITE_LOADING })\r\n\r\n    try {\r\n        const { login: { token } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n        const response = await axios.delete('/favorites/' + id, config)\r\n\r\n        dispatch({ type: ActionTypes.DELETE_FAVORITE_SUCCESS, payload: response.data })\r\n\r\n        dispatch(getFavorites())\r\n\r\n\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.DELETE_FAVORITE_FAILED, payload: err })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getFavorites = () => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.GET_FAVORITES_LOADING })\r\n\r\n    try {\r\n        const { login: { token } } = getState()\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n        const response = await axios.get(\"/favorites\", config)\r\n        dispatch({ type: ActionTypes.GET_FAVORITES_SUCCESS, payload: response.data })\r\n\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.GET_FAVORITES_FAILED, payload: err })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// Reservations\r\n\r\nexport const getReservations = () => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.RESERVATIONS_LOADING })\r\n    try {\r\n        const { login: { token } } = getState()\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const reservation = await axios.get('/reserve', config)\r\n        dispatch({ type: ActionTypes.RESERVATIONS_SUCCESS, payload: reservation.data })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.RESERVATIONS_FAILED, payload: err })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const addReservation = (guests, smoking, date) => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.ADD_RESERVATION_LOADING })\r\n    try {\r\n        const { login: { token } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const response = await axios.post('/reserve', { guests, smoking, date }, config)\r\n\r\n        dispatch({ type: ActionTypes.ADD_RESERVATION_SUCCESS, payload: response.data })\r\n        dispatch(getReservations())\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.ADD_RESERVATION_FAILED, payload: err })\r\n    }\r\n\r\n}\r\n\r\nexport const delReservation = (dishId) => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.RESERVATIONS_LOADING })\r\n    try {\r\n        const { login: { token } } = getState()\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const response = await axios.delete('/reserve/' + dishId, config)\r\n        dispatch({ type: ActionTypes.RESERVATIONS_SUCCESS, payload: response.data })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.RESERVATIONS_FAILED, payload: err })\r\n\r\n    }\r\n}\r\n\r\n\r\n// comments\r\n\r\n\r\n\r\nexport const addComment = (dishId, rating, comment) => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.ADD_COMMENT_LOADING })\r\n\r\n    try {\r\n        const { login: { token } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n\r\n\r\n        const response = await axios.post('/dishes/' + dishId + '/comments', { rating, comment }, config)\r\n        dispatch({ type: ActionTypes.ADD_COMMENT_SUCCESS, payload: response.data })\r\n        dispatch(fetchDishes())\r\n    }\r\n    catch (err) {\r\n\r\n        dispatch({ type: ActionTypes.ADD_COMMENT_FAILED, payload: err })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const delComment = (dishId, commentId) => async (dispatch, getState) => {\r\n    dispatch({ type: ActionTypes.DELETE_COMMENT_LOADING })\r\n\r\n    try {\r\n        const { login: { token } } = getState()\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const response = await axios.delete(\"/dishes/\" + dishId + \"/comments/\" + commentId, config)\r\n        dispatch({ type: ActionTypes.DELETE_COMMENT_SUCCESS, payload: response.data })\r\n        dispatch(fetchDishes())\r\n\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({ type: ActionTypes.DELETE_COMMENT_FAILED, payload: err })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// // post comment\r\n// export const addComment = (comment) => ({\r\n\r\n//     type: ActionTypes.ADD_COMMENT,\r\n//     payload: comment\r\n// })\r\n// export const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n//     const newComment = {\r\n//         dishId: dishId,\r\n//         rating: rating,\r\n//         author: author,\r\n//         comment: comment\r\n\r\n//     }\r\n//     newComment.date = new Date().toISOString();\r\n\r\n//     return fetch(baseUrl + 'comments', {\r\n//         method: 'POST',\r\n//         body: JSON.stringify(newComment),\r\n//         headers: {\r\n//             'Content-Type': 'application/json'\r\n//         },\r\n//         credentials: 'same-origin'\r\n\r\n//     })\r\n//         .then(response => {\r\n//             if (response.ok) {\r\n//                 return response\r\n//             }\r\n//             else {\r\n//                 var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n//                 error.response = response;\r\n//                 throw error\r\n//             }\r\n//         },\r\n//             error => {\r\n//                 var errmess = new Error(error.message)\r\n//                 throw errmess\r\n//             })\r\n//         .then(response => response.json())\r\n//         .then(comment => {\r\n//             console.log(comment)\r\n//             dispatch(addComment(comment))\r\n//         })\r\n//         .catch(error => console.log(\"post comments\" + error))\r\n\r\n// }\r\n\r\n// // post feedback\r\n\r\n// export const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n//     const values = {\r\n//         firstname: firstname,\r\n//         lastname: lastname,\r\n//         telnum: telnum,\r\n//         email: email,\r\n//         agree: agree,\r\n//         contactType: contactType,\r\n//         message: message\r\n\r\n//     }\r\n\r\n\r\n\r\n//     values.date = new Date().toISOString()\r\n\r\n\r\n//     return fetch(baseUrl + 'feedback', {\r\n//         method: 'POST',\r\n//         body: JSON.stringify(values),\r\n//         headers: {\r\n//             'Content-Type': 'application/json'\r\n//         },\r\n//         credentials: 'same-origin'\r\n\r\n//     })\r\n//         .then(response => {\r\n//             if (response.ok) {\r\n//                 return response\r\n//             }\r\n//             else {\r\n//                 var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n//                 error.response = response;\r\n//                 throw error\r\n//             }\r\n//         },\r\n//             error => {\r\n//                 var errmess = new Error(error.message)\r\n//                 throw errmess\r\n//             })\r\n//         .then(response => response.json())\r\n//         .then(feedback => {\r\n\r\n//             alert(\"Thanks for the feedback !\" + JSON.stringify(feedback));\r\n//             return feedback\r\n//         })\r\n//         .catch(error => console.log(\"post comments\" + error))\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// // dishes\r\n\r\n// export const fetchDishes = () => (dispatch) => {\r\n//     dispatch(dishesLoading(true));\r\n//     return fetch(baseUrl + 'dishes')\r\n//         .then(response => {\r\n//             if (response.ok) {\r\n//                 return response\r\n//             }\r\n//             else {\r\n//                 var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n//                 error.response = response;\r\n//                 throw error\r\n//             }\r\n//         },\r\n//             error => {\r\n//                 var errmess = new Error(error.message)\r\n//                 throw errmess\r\n//             })\r\n//         .then(response => response.json())\r\n//         .then(dishes => {\r\n//             dispatch(addDishes(dishes))\r\n//         })\r\n//         .catch(error => dispatch(dishesFailed(error)))\r\n\r\n// }\r\n\r\n\r\n// export const dishesLoading = () => ({\r\n//     type: ActionTypes.DISHES_LOADING\r\n\r\n// })\r\n\r\n// export const dishesFailed = (errmess) => ({\r\n//     type: ActionTypes.DISHES_FAILED,\r\n//     payload: errmess\r\n\r\n// })\r\n\r\n// export const addDishes = (dishes) => ({\r\n//     type: ActionTypes.ADD_DISHES,\r\n//     payload: dishes\r\n\r\n// })\r\n\r\n\r\n// // comments\r\n\r\n// export const fetchComments = () => (dispatch) => {\r\n//     return fetch(baseUrl + 'comments')\r\n//         .then(response => {\r\n//             if (response.ok) {\r\n//                 return response\r\n//             }\r\n//             else {\r\n//                 var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n//                 error.response = response;\r\n//                 throw error\r\n//             }\r\n//         },\r\n//             error => {\r\n//                 var errmess = new Error(error.message)\r\n//                 throw errmess\r\n//             })\r\n//         .then(response => response.json())\r\n//         .then(comments => {\r\n//             dispatch(addComments(comments))\r\n//         })\r\n//         .catch(error => dispatch(commentsFailed(error)))\r\n// }\r\n\r\n// export const commentsFailed = (errmess) => ({\r\n//     type: ActionTypes.COMMENTS_FAILED,\r\n//     payload: errmess\r\n\r\n// })\r\n\r\n// export const addComments = (comments) => ({\r\n//     type: ActionTypes.ADD_COMMENTS,\r\n//     payload: comments\r\n\r\n// })\r\n\r\n// // Promotions\r\n\r\n// export const fetchPromos = () => (dispatch) => {\r\n//     dispatch(promosLoading(true));\r\n//     return fetch(baseUrl + 'promotions')\r\n//         .then(response => {\r\n//             if (response.ok) {\r\n//                 return response\r\n//             }\r\n//             else {\r\n//                 var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n//                 error.response = response;\r\n//                 throw error\r\n//             }\r\n//         },\r\n//             error => {\r\n//                 var errmess = new Error(error.message)\r\n//                 throw errmess\r\n//             })\r\n//         .then(response => response.json())\r\n//         .then(promos => {\r\n//             dispatch(addPromos(promos))\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch(promosFailed(error))\r\n//         })\r\n\r\n// }\r\n\r\n\r\n// export const promosLoading = () => ({\r\n//     type: ActionTypes.PROMOS_LOADING\r\n\r\n// })\r\n\r\n// export const promosFailed = (errmess) => ({\r\n//     type: ActionTypes.PROMOS_FAILED,\r\n//     payload: errmess\r\n\r\n// })\r\n\r\n// export const addPromos = (dishes) => ({\r\n//     type: ActionTypes.ADD_PROMOS,\r\n//     payload: dishes\r\n\r\n// })\r\n\r\n\r\n// // Leaders\r\n// export const fetchLeaders = () => (dispatch) => {\r\n//     dispatch(leadersLoading(true));\r\n//     return fetch(baseUrl + 'leaders')\r\n//         .then(response => {\r\n//             if (response.ok) {\r\n//                 return response\r\n//             }\r\n//             else {\r\n//                 var error = new Error('Error ' + response.status + \": \" + response.statusText)\r\n//                 error.response = response;\r\n//                 throw error\r\n//             }\r\n//         },\r\n//             error => {\r\n//                 var errmess = new Error(error.message)\r\n//                 throw errmess\r\n//             })\r\n//         .then(response => response.json())\r\n//         .then(leaders => {\r\n//             dispatch(addLeaders(leaders))\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch(leadersFailed(error))\r\n//         })\r\n\r\n// }\r\n\r\n\r\n// export const leadersLoading = () => ({\r\n//     type: ActionTypes.LEADERS_LOADING\r\n\r\n// })\r\n\r\n// export const leadersFailed = (errmess) => ({\r\n//     type: ActionTypes.LEADERS_FAILED,\r\n//     payload: errmess\r\n\r\n// })\r\n\r\n// export const addLeaders = (leaders) => ({\r\n//     type: ActionTypes.LEADERS_SUCCESS,\r\n//     payload: leaders\r\n\r\n// })\r\n\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS'\r\n\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING'\r\nexport const DISHES_SUCCESS = 'DISHES_SUCCESS'\r\nexport const DISHES_FAILED = 'DISHES_FAILED'\r\nexport const ADD_DISHES = 'ADD_DISHES'\r\n\r\n\r\nexport const DISH_WITH_ID_LOADING = 'DISH_WITH_ID_LOADING'\r\nexport const DISH_WITH_ID_SUCCESS = 'DISH_WITH_ID_SUCCESS'\r\nexport const DISH_WITH_ID_FAILED = 'DISH_WITH_ID_FAILED'\r\n\r\n\r\nexport const GET_FAVORITES_LOADING = 'GET_FAVORITES_LOADING'\r\nexport const GET_FAVORITES_SUCCESS = 'GET_FAVORITES_SUCCESS'\r\nexport const GET_FAVORITES_FAILED = 'GET_FAVORITES_FAILED'\r\n\r\nexport const ADD_FAVORITE_LOADING = 'ADD_FAVORITE_LOADING'\r\nexport const ADD_FAVORITE_SUCCESS = 'ADD_FAVORITE_SUCCESS'\r\nexport const ADD_FAVORITE_FAILED = 'ADD_FAVORITE_FAILED'\r\n\r\nexport const DELETE_FAVORITE_LOADING = 'DELETE_FAVORITE_LOADING'\r\nexport const DELETE_FAVORITE_SUCCESS = 'DELETE_FAVORITE_SUCCESS'\r\nexport const DELETE_FAVORITE_FAILED = 'DELETE_FAVORITE_FAILED'\r\n\r\n\r\n\r\nexport const RESERVATIONS_LOADING = 'RESERVATIONS_LOADING'\r\nexport const RESERVATIONS_SUCCESS = 'RESERVATIONS_SUCCESS'\r\nexport const RESERVATIONS_FAILED = 'RESERVATIONS_FAILED'\r\n\r\nexport const ADD_RESERVATION_LOADING = 'ADD_RESERVATION_LOADING'\r\nexport const ADD_RESERVATION_SUCCESS = 'ADD_RESERVATION_SUCCESS'\r\nexport const ADD_RESERVATION_FAILED = 'ADD_RESERVATION_FAILED'\r\n\r\n\r\n\r\n// comment\r\nexport const ADD_COMMENT_LOADING = 'ADD_COMMENT_LOADING'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILED = 'ADD_COMMENT_FAILED'\r\n\r\n\r\n\r\nexport const DELETE_COMMENT_LOADING = 'DELETE_COMMENT_LOADING'\r\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS'\r\nexport const DELETE_COMMENT_FAILED = 'DELETE_COMMENT_FAILED'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING'\r\nexport const PROMOS_SUCCESS = 'PROMOS_SUCCESS'\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED'\r\nexport const ADD_PROMOS = 'ADD_PROMOS'\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING'\r\nexport const LEADERS_SUCCESS = 'LEADERS_SUCCESS'\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED'\r\n\r\n\r\nexport const LOGIN_USER_LOADING = 'LOGIN_USER_LOADING'\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS'\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED'\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER'","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n    Nav, Navbar,\r\n    Modal, Button,\r\n    Form,\r\n    Jumbotron, Container,\r\n    Row, Col,\r\n} from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addReservation, loginUser, logoutUser } from '../redux/ActionCreators'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst HeaderComponent = (props) => {\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const [isReserveModalOpen, setIsReserveModalOpen] = useState(false)\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n    const [guests, setGuests] = useState(0)\r\n    const [smoking, setSmoking] = useState(false)\r\n    const [date, setDate] = useState('')\r\n\r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem('savedUser'))\r\n\r\n        if (user) {\r\n\r\n            setEmail(user.email)\r\n            setPassword(user.password)\r\n            setRemember(user.remember)\r\n\r\n        }\r\n    }, [props.loggedIn])\r\n\r\n\r\n\r\n    const toggleModal = () => {\r\n\r\n        setIsModalOpen(!isModalOpen)\r\n    }\r\n    const toggleReserveModal = () => {\r\n        setIsReserveModalOpen(!isReserveModalOpen)\r\n    }\r\n\r\n\r\n    const reserveTable = (e) => {\r\n        e.preventDefault()\r\n\r\n        props.addReservation(guests, smoking, date)\r\n\r\n        toggleReserveModal()\r\n\r\n\r\n    }\r\n\r\n    const handleLogin = (event) => {\r\n\r\n        event.preventDefault()\r\n        if (remember) {\r\n            const details = {\r\n                email: email,\r\n                password: password,\r\n                remember: remember\r\n            }\r\n\r\n            localStorage.setItem('savedUser', JSON.stringify(details))\r\n\r\n        }\r\n        props.login(email, password)\r\n        toggleModal();\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"#512da8\" variant=\"dark\" collapseOnSelect>\r\n                <Container>\r\n                    <Navbar.Brand href=\"/home\" className=\"mr-auto\"><img src={'/images/logo.png'}\r\n                        height=\"30\" width=\"40\" alt=\"Ristorante Con Fusion\" /></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n\r\n                            <NavLink className=\"nav-link\" to=\"/home\" >\r\n                                <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n\r\n\r\n                            <NavLink className=\"nav-link\" to=\"/aboutus\" >\r\n                                <span className=\"fa fa-info fa-lg\"></span> About\r\n                                </NavLink>\r\n\r\n\r\n                            <NavLink className=\"nav-link\" to=\"/menu\" >\r\n                                <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                </NavLink>\r\n\r\n\r\n                            <NavLink className=\"nav-link\" to=\"/contactus\" >\r\n                                <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n\r\n                            <NavLink className=\"nav-link\" to=\"/favorite\" >\r\n                                <span className=\"fa fa-heart fa-lg\"></span> favorites\r\n                                    </NavLink>\r\n\r\n                            <NavLink className=\"nav-link\" to=\"/reservations\" >\r\n                                <span className=\"fa fa-cutlery fa-lg\"></span> Reservations\r\n                                    </NavLink>\r\n\r\n\r\n                        </Nav>\r\n                        {props.loggedIn.isAuthenticated ?\r\n                            (\r\n                                <Nav>\r\n                                    <Nav.Link>\r\n                                        <Button variant=\"outline-light\" onClick={() => props.logout()}>\r\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\r\n                                    </Button>\r\n\r\n                                    </Nav.Link>\r\n                                </Nav>\r\n                            ) : (\r\n                                <Nav>\r\n                                    <Nav.Link>\r\n                                        <Button variant=\"outline-light\" onClick={toggleModal}>\r\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                    </Nav.Link>\r\n                                </Nav>\r\n                            )}\r\n\r\n                    </Navbar.Collapse>\r\n\r\n                </Container>\r\n            </Navbar>\r\n            <Jumbotron >\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the Wrold's best cuisines, and create a unique fusion experience . Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </Col>\r\n                        <Col xs={12} md={6}>\r\n                            <div className=\"d-flex  justify-content-center mt-4 ml-2\">\r\n\r\n                                <Button onClick={toggleReserveModal} size=\"lg\" variant=\"btn btn-warning \" >Reserve Table</Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                {/*  */}\r\n            </Jumbotron>\r\n            <Modal show={isModalOpen} onHide={toggleModal} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleLogin}>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n\r\n\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                            <Form.Control type='password' placeholder=\"Enter Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n\r\n\r\n                        </Form.Group>\r\n                        <Form.Group id=\"forCheckBox\">\r\n\r\n                            <Form.Check type=\"checkbox\" id=\"remember\" checked={remember} label=\"Remember Me\" onChange={(e) => setRemember(e.target.checked)} />\r\n\r\n\r\n\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\" >Login</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n\r\n            {props.loggedIn.isAuthenticated ?\r\n                (\r\n                    <Modal show={isReserveModalOpen} onHide={toggleReserveModal} >\r\n                        <Container>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Table Reservation</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form onSubmit={reserveTable}>\r\n                                    <Form.Group>\r\n                                        <Row>\r\n                                            <Col md={4}>\r\n                                                <Form.Label htmlFor=\"username\">Guests</Form.Label>\r\n                                            </Col>\r\n                                            <Col md={8}>\r\n\r\n                                                <Form.Control as='select' onChange={(e) => setGuests(e.target.value)}  >\r\n                                                    <option>Select No. of Persons</option>\r\n                                                    <option>1</option>\r\n                                                    <option>2</option>\r\n                                                    <option>3</option>\r\n                                                    <option>4</option>\r\n                                                    <option>5</option>\r\n                                                    <option>6</option>\r\n                                                </Form.Control>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Row>\r\n                                            <Col md={4}>\r\n                                                <Form.Label >Smoking?</Form.Label>\r\n                                            </Col>\r\n                                            <Col md={8}>\r\n\r\n                                                <Form.Check\r\n\r\n                                                    type='checkbox'\r\n                                                    id=\"smoking\"\r\n                                                    label=\"Smoking\"\r\n                                                    checked={smoking}\r\n                                                    onChange={(e) => setSmoking(e.target.checked)}\r\n\r\n                                                />\r\n                                                {/* <Form.Check type=\"checkbox\" id=\"remember\" checked={remember} label=\"Remember Me\" onChange={(e) => setRemember(e.target.checked)} /> */}\r\n                                            </Col>\r\n\r\n\r\n                                        </Row>\r\n\r\n\r\n\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Row>\r\n                                            <Col md={4}>\r\n                                                <Form.Label >\r\n                                                    Date & Time\r\n                                            </Form.Label>\r\n                                            </Col>\r\n                                            <Col md={8}>\r\n                                                <Form.Control value={date} type=\"date\" onChange={(e) => setDate(e.target.value)} />\r\n\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form.Group>\r\n                                    <Button onClick={toggleReserveModal} >Close</Button>\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\" className=\"ml-3\" >Reserve</Button>\r\n                                </Form>\r\n                            </Modal.Body>\r\n\r\n                        </Container>\r\n\r\n                    </Modal>\r\n                ) :\r\n                (\r\n                    <Modal show={isReserveModalOpen} onHide={toggleReserveModal} >\r\n                        <Container>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Table Reservation</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <p>You need to Login for Reserving Table</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n\r\n                        </Container>\r\n\r\n                    </Modal>\r\n                )\r\n            }\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedIn: state.login,\r\n\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login: (email, password) => dispatch(loginUser(email, password)),\r\n    addReservation: (guests, smoking, date) => dispatch(addReservation(guests, smoking, date)),\r\n    logout: () => dispatch(logoutUser())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent);\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"col-12 \">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary \" ></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Card, Breadcrumb, Container, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './LoadingComponent';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nfunction RenderMenuItem({ dish, match }) {\r\n\r\n    return (\r\n        <Card  >\r\n\r\n\r\n            <Link to={`/dish/${dish._id}`} style={{ color: 'white', textDecoration: 'none' }}>\r\n\r\n                <Card.Img width=\"100%\" src={\"/images/\" + dish.image} alt={dish.name} />\r\n                <Card.ImgOverlay style={{ backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }} >\r\n\r\n                    <Card.Title style={{ textAlign: 'center' }} >{dish.name}</Card.Title>\r\n                    <Card.Text >{dish.description}</Card.Text>\r\n                </Card.ImgOverlay>\r\n\r\n            </Link>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nconst Menu = ({ dishes, onClick, }) => {\r\n\r\n    if (dishes.isLoading) {\r\n        return (\r\n            <Container className=\"d-flex flex-row justify-content-center mt-5\">\r\n                <Row>\r\n\r\n                    <Loading />\r\n                </Row>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n    else if (dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{dishes.errMess}</h4>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item active>Menu</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row pb-5\">\r\n\r\n                    {dishes.dishes.map(dish => (\r\n                        <div key={dish._id} className=\"col-12 col-md-5 mt-5\">\r\n                            <RenderMenuItem dish={dish} />\r\n\r\n                        </div>\r\n\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dishes: state.dishes\r\n})\r\n\r\nexport default connect(mapStateToProps)(Menu)\r\n","import React from 'react';\r\nimport Loading from './LoadingComponent';\r\n\r\nimport { FadeTransform } from 'react-animation-components'\r\nimport { Card } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n\r\n    if (item) {\r\n        if (isLoading) {\r\n            return (\r\n                <Loading />\r\n            )\r\n        }\r\n        else if (errMess) {\r\n            return (\r\n                <h4>{errMess}</h4>\r\n            )\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n                    <Card>\r\n                        <Card.Img src={'/images/' + item.image} alt={item.name} />\r\n                        <Card.Body>\r\n                            <Card.Title>{item.name}</Card.Title>\r\n                            {item.designation ? <Card.Subtitle className=\"my-3\">{item.designation}</Card.Subtitle> : null}\r\n                            <Card.Text>{item.description}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </FadeTransform>\r\n\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nconst HomeComponent = ({ dishes, promotions, leaders }) => {\r\n\r\n\r\n\r\n    if (dishes.dishes.length >= 1 && promotions.promotions.length >= 1 && leaders.leaders.length >= 1) {\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-start\">\r\n                    <div className=\"col-12 col-md my-3\">\r\n                        <RenderCard item={dishes.dishes[0]} isLoading={dishes.isLoading} errMess={dishes.errMess} />\r\n\r\n                    </div>\r\n                    <div className=\"col-12 col-md my-3\">\r\n                        <RenderCard item={promotions.promotions[0]} isLoading={promotions.isLoading} errMess={promotions.errMess} />\r\n\r\n                    </div>\r\n                    <div className=\"col-12 col-md my-3\">\r\n                        <RenderCard item={leaders.leaders[0]} isLoading={leaders.isLoading} errMess={leaders.errMess} />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    dishes: state.dishes,\r\n    leaders: state.leaders,\r\n    promotions: state.promotions\r\n})\r\nexport default connect(mapStateToProps)(HomeComponent);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ text, value, color }) => {\r\n    return (\r\n        <div className=\"raitng\">\r\n            <span>\r\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\n\r\nexport default Rating;","import React, { Component, useEffect, useState } from 'react';\r\n\r\nimport { Breadcrumb, Button, Form, Row, Col, Card, Modal } from 'react-bootstrap'\r\n\r\nimport Loading from './LoadingComponent';\r\n\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\r\nimport { connect } from 'react-redux'\r\nimport { addFavorite, delComment, delFavorite, dishWithId, addComment } from '../redux/ActionCreators';\r\nimport Rating from '../utilities/Rating'\r\n\r\nfunction RenderDish(props) {\r\n\r\n    const [isModal, setIsModal] = useState(false)\r\n    const toggleModal = () => {\r\n        setIsModal(!isModal)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    if (props.dish != null) {\r\n\r\n        var favorite = []\r\n\r\n        if (props.isAuthenticated || props.favorites.favorites.length >= 1) {\r\n            favorite = props.favorites.favorites[0].dishes.filter(item => item._id.toString() === props.dish._id.toString())\r\n\r\n        }\r\n        return (\r\n            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>\r\n                <Card>\r\n                    <Card.Img variant='top' src={'/images/' + props.dish.image} alt={props.dish.name} />\r\n                    <Card.Body>\r\n                        {props.login.isAuthenticated ?\r\n                            (favorite.length >= 1 ?\r\n                                (<><Button className=\"btn btn-light\" onClick={() => props.delFavorite(props.dish._id)} ><span className=\"fa fa-heart fa-2x\" ></span></Button>\r\n                                    <Button className=\"btn btn-light\" onClick={() => toggleModal()}><span className=\"fa fa-comment-o fa-2x\"></span></Button></>) :\r\n                                (<><Button className=\"btn btn-light\" onClick={() => props.addFavorite(props.dish._id)}><span className=\"fa fa-heart-o fa-2x\"></span></Button>\r\n                                    <Button className=\"btn btn-light\" onClick={() => toggleModal()}><span className=\"fa fa-comment-o fa-2x\"></span></Button></>)\r\n                            ) :\r\n                            (null)\r\n                        }\r\n\r\n                        <p style={{ marginBottom: 10 }}>{props.dish.description}</p>\r\n                    </Card.Body>\r\n                </Card>\r\n                <CommentForm addComment={(id, rating, comment) => props.addComment(id, rating, comment)} dishWithId={props.dishWithId} login={props.login} isModalOpen={isModal} toggleModal={toggleModal} dishId={props.dishId} postComment={props.postComment} />\r\n\r\n            </FadeTransform>\r\n\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            comment: ''\r\n        }\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n\r\n        this.props.addComment(this.props.dishId, this.state.rating, this.state.comment)\r\n        this.props.toggleModal();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.login.isAuthenticated) {\r\n\r\n            const AlreadyCommented = this.props.dishWithId.dish.comments.filter(comment => comment.author._id.toString() === this.props.login.user._id.toString());\r\n\r\n\r\n            if (AlreadyCommented.length >= 1) {\r\n                return (\r\n                    <Modal show={this.props.isModalOpen} onHide={this.props.toggleModal}>\r\n                        <Modal.Header closeButton>Submit Comment</Modal.Header>\r\n                        <Modal.Body>\r\n                            <h5>Commented Already</h5>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <Modal show={this.props.isModalOpen} onHide={this.props.toggleModal}>\r\n                        <Modal.Header closeButton>Submit Comment</Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Row className=\"form-group\">\r\n\r\n                                    <Col >\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"username\">Rating</Form.Label>\r\n                                            <Form.Control as='select' onChange={(e) => this.setState({ rating: e.target.value })}  >\r\n                                                <option>Select Rating</option>\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n\r\n                                    <Col md={12}>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                                            <Form.Control as=\"textarea\" rows={3} placeholder=\"Comment\" value={this.state.comment} onChange={(e) => this.setState({ comment: e.target.value })} />\r\n\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <Modal show={this.props.isModalOpen} onHide={this.props.toggleModal}>\r\n                    <Modal.Header closeButton>Submit Comment</Modal.Header>\r\n                    <Modal.Body>\r\n                        <h5>You need to login to comment</h5>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass RenderComments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            AlreadyCommented: false\r\n\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        if (this.props.comments != null) {\r\n            return (\r\n                <div>\r\n                    <Stagger in>\r\n                        {\r\n                            this.props.comments.map(comment => {\r\n                                if (this.props.login.isAuthenticated) {\r\n                                    if (comment.author._id.toString() === this.props.login.user._id.toString()) {\r\n\r\n                                        return (\r\n\r\n                                            <Fade in key={comment._id}>\r\n                                                <div className=\"border border-dark border-3\" >\r\n                                                    <div className=\"d-flex flex-row justify-content-between\">\r\n\r\n\r\n                                                        <ul className=\"list-unstyled\" >\r\n                                                            <Rating text={\"rating\"} value={comment.rating} color={'orange'} />\r\n                                                            <li>{comment.comment}</li>\r\n                                                            <p>-- {comment.author.username} , {comment.createdAt.substring(0, 10)}</p>\r\n                                                        </ul>\r\n                                                        <Button onClick={() => this.props.delComment(this.props.dishId, comment._id)} variant=\"outlined-light\" ><span className=\"fa fa-trash fa-2x\"></span></Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Fade>\r\n\r\n                                        )\r\n                                    }\r\n                                    else {\r\n                                        return (\r\n\r\n                                            <Fade in key={comment._id}>\r\n                                                <ul className=\"list-unstyled\">\r\n                                                    <Rating text={\"rating\"} value={comment.rating} color={'orange'} />\r\n                                                    <li>{comment.comment}</li>\r\n                                                    <p>-- {comment.author.firstname} , {comment.createdAt.substring(0, 10)}</p>\r\n                                                </ul>\r\n                                            </Fade>\r\n\r\n                                        )\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    return (\r\n\r\n                                        <Fade in key={comment._id}>\r\n                                            <ul className=\"list-unstyled\">\r\n                                                <Rating text={\"rating\"} value={comment.rating} color={'orange'} />\r\n                                                <li>{comment.comment}</li>\r\n                                                <p>-- {comment.author.firstname} , {comment.createdAt.substring(0, 10)}</p>\r\n                                            </ul>\r\n                                        </Fade>\r\n\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                    </Stagger>\r\n\r\n\r\n\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n        else {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst Dishdetail = (props) => {\r\n\r\n\r\n    const dishId = props.match.params.dishId\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        props.dishIdFetch(dishId)\r\n\r\n    }, [dishId, props.dishes, props.favorites, props.favorites]);\r\n    if (props.dishWithId.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.dishWithId.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishWithId.errMess}</h4>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.dishWithId.dish != null && props.dishWithId.dish.comments != null) {\r\n\r\n        return (\r\n            <div className=\"container pb-5\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <Breadcrumb.Item href=\"/menu\">Menu</Breadcrumb.Item>\r\n                        <Breadcrumb.Item active> {props.dishWithId.dish.name}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dishWithId.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <RenderDish\r\n                            delFavorite={(id) => props.delFavorite(id)}\r\n                            addFavorite={(id) => props.addFavorite(id)}\r\n                            favorites={props.favorites}\r\n                            dish={props.dishWithId.dish}\r\n                            login={props.login}\r\n                            dishWithId={props.dishWithId}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dishWithId.dish._id}\r\n                            addComment={(id, rating, comment) => props.addComment(id, rating, comment)}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\" col-12 col-md-5 offset-md-1 \">\r\n                        <h4>Comments</h4>\r\n                        <RenderComments delComment={(dishId, commentId) => props.delComment(dishId, commentId)} dishWithId={props.dishWithId} login={props.login} comments={props.dishWithId.dish.comments} postComment={props.postComment} dishId={props.dishWithId.dish._id} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dishWithId: state.dishWithId,\r\n    login: state.login,\r\n    favorites: state.favorites,\r\n    dishes: state.dishes\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dishIdFetch: (id) => dispatch(dishWithId(id)),\r\n    addFavorite: (id) => dispatch(addFavorite(id)),\r\n    delFavorite: (id) => dispatch(delFavorite(id)),\r\n    addComment: (dishId, rating, comment) => dispatch(addComment(dishId, rating, comment)),\r\n    delComment: (dishId, commentId) => dispatch(delComment(dishId, commentId))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishdetail);\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item active> Contact Us</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    {/* <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div> */}\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"http://twitter.com/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Media, Image, Breadcrumb, Card } from 'react-bootstrap'\r\nimport { Fade, Stagger } from 'react-animation-components'\r\nimport Loading from './LoadingComponent';\r\nimport { connect } from 'react-redux'\r\n\r\nfunction RenderLeaders(props) {\r\n\r\n    if (props.isLoading) {\r\n\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n\r\n        return (\r\n            <div className=\"col-12 mt-5\">\r\n                <Stagger in>\r\n                    <Fade in>\r\n                        <Media >\r\n                            <Image className=\"align-self-start mr-3\" width={130} height={130} src={'/images/' + props.leader.image} />\r\n                            <Media.Body>\r\n                                <h5>{props.leader.name}</h5>\r\n                                <p>{props.leader.designation}</p>\r\n                                <p>{props.leader.description}</p>\r\n                            </Media.Body>\r\n                        </Media>\r\n\r\n                    </Fade>\r\n                </Stagger>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeaders key={leader._id} leader={leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>About Us</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <Card.Header className=\"bg-primary text-white\">Facts At a Glance</Card.Header>\r\n                        <Card.Body>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <Card.Body className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n\r\n                    {leaders}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    leaders: state.leaders\r\n})\r\n\r\nexport default connect(mapStateToProps)(About);    ","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Image, Container, Row, Col, Button } from 'react-bootstrap'\r\nimport { delFavorite } from '../redux/ActionCreators'\r\nimport Loading from './LoadingComponent'\r\n\r\nconst FavoriteComponent = (props) => {\r\n\r\n    useEffect(() => {\r\n\r\n    }, [props.favorites])\r\n    if (props.favorites.favorites.length >= 1) {\r\n\r\n        if (props.favorites.favorites[0].dishes.length >= 1) {\r\n            if (props.favorites.isLoading) {\r\n                return (\r\n                    <Container className=\"d-flex flex-row justify-content-center mt-5\">\r\n                        <Row>\r\n\r\n                            <Loading />\r\n                        </Row>\r\n\r\n                    </Container>\r\n                )\r\n            }\r\n            else if (props.favorites.errMess) {\r\n                return (\r\n                    <Container>\r\n                        <Row>\r\n                            <Col >\r\n                                {props.favorites.errMess}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                )\r\n            }\r\n            else {\r\n\r\n                return (\r\n                    <Container className=\"my-5\">\r\n\r\n                        {props.favorites.favorites[0].dishes.map(fav => (\r\n                            <Row className=\"mb-4\" key={fav._id} >\r\n\r\n                                <Col xs={2} md={2}>\r\n                                    <Image className=\"align-self-start mr-3\" width={100} height={100} src={'/images/' + fav.image} />\r\n\r\n                                </Col>\r\n                                <Col xs={10} md={10}>\r\n\r\n\r\n\r\n\r\n\r\n                                    <div >\r\n                                        <h5>{fav.name}</h5>\r\n                                        <Button onClick={() => props.delFavorite(fav._id)} variant=\"outline bg-danger text-light\">Delete</Button>\r\n\r\n\r\n                                    </div>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                        ))}\r\n\r\n                    </Container>\r\n                );\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <Container className=\"my-5\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h3>No Favorites Added</h3>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )\r\n\r\n        }\r\n    }\r\n    else {\r\n        return (\r\n            <Container className=\"my-5\">\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Please login to view favorites</h3>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    favorites: state.favorites\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    delFavorite: (id) => dispatch(delFavorite(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriteComponent);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Container, Row, Col, Table, Button } from 'react-bootstrap'\r\nimport { delReservation } from '../redux/ActionCreators';\r\nimport Loading from './LoadingComponent'\r\n\r\nconst ReserationComponent = (props) => {\r\n\r\n    useEffect(() => {\r\n\r\n    }, [props.reservations])\r\n    if (props.login.isAuthenticated) {\r\n        if (props.reservations.reservations.length >= 1 && props.reservations.reservations[0].reservations.length >= 1) {\r\n            if (props.reservations.isLoading) {\r\n                return (\r\n                    <Container className=\"d-flex flex-row justify-content-center\">\r\n                        <Row>\r\n\r\n                            <Loading />\r\n                        </Row>\r\n\r\n                    </Container>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <Container className=\"my-5\">\r\n                        <Row>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Date</th>\r\n                                        <th>No. Of Persons</th>\r\n                                        <th>Smoking</th>\r\n                                        <th>Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {props.reservations.reservations[0].reservations.map((reservation, index) => (\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{reservation.date}</td>\r\n                                            <td>{reservation.guests}</td>\r\n                                            <td>{reservation.smoking ? \"true\" : \"false\"}</td>\r\n                                            <td><Button variant='danger' onClick={() => props.delReservation(reservation._id)}>Delete</Button></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                ))}\r\n\r\n                            </Table>\r\n                        </Row>\r\n                    </Container>\r\n                );\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <h5>No reservations yet</h5>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"my-5\">\r\n                        <h5>Please Login see Reservations</h5>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reservations: state.reservations,\r\n    login: state.login\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    delReservation: (id) => dispatch(delReservation(id))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReserationComponent);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport Header from './HeaderComponent';\r\nimport Menu from './MenuComponent';\r\n\r\nimport Home from './HomeComponent';\r\nimport DishdetailComponent from './DishdetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchDishes, fetchLeaders, fetchPromos } from '../redux/ActionCreators'\r\n\r\n\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport FavoriteComponent from './FavoriteComponent'\r\nimport ReservationComponent from './ReserationComponent'\r\n\r\nclass Main extends Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={Home} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                            <Route path=\"/dish/:dishId\" exact component={DishdetailComponent} />\r\n                            <Route path=\"/favorite\" exact component={FavoriteComponent} />\r\n                            <Route path=\"/reservations\" exact component={ReservationComponent} />\r\n                            <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders.leaders} leadersLoading={this.props.leaders.isLoading} leadersErrMess={this.props.leaders.errMess} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders,\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    fetchPromos: () => { dispatch(fetchPromos()) },\r\n    fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n\r\n\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    dishes: [],\r\n\r\n}\r\nexport const Dishes = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case ActionTypes.DISHES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dishes: action.payload,\r\n                isLoading: false\r\n            }\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {\r\n                ...state,\r\n\r\n                errMess: action.payload\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialDishState = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    dish: {}\r\n}\r\n\r\nexport const dishWithId = (state = initialDishState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.DISH_WITH_ID_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case ActionTypes.DISH_WITH_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                dish: action.payload,\r\n                errMess: null\r\n            }\r\n        case ActionTypes.DISH_WITH_ID_FAILED:\r\n            return {\r\n                ...state,\r\n                errMess: action.payload\r\n\r\n            }\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    promotions: []\r\n\r\n}\r\n\r\nexport const Promotions = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case ActionTypes.PROMOS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                promotions: action.payload,\r\n                isLoading: false\r\n            }\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {\r\n                ...state,\r\n\r\n                errMess: action.payload\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from '../redux/ActionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    errMess: false,\r\n    leaders: []\r\n}\r\n\r\nexport const Leaders = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case ActionTypes.LEADERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                leaders: action.payload,\r\n                isLoading: false\r\n\r\n\r\n            }\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {\r\n                ...state,\r\n                errMess: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    Status: ''\r\n}\r\nexport const comments = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENT_LOADING:\r\n        case ActionTypes.DELETE_COMMENT_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case ActionTypes.ADD_COMMENT_SUCCESS:\r\n        case ActionTypes.DELETE_COMMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                Status: action.payload\r\n            }\r\n\r\n        case ActionTypes.ADD_COMMENT_FAILED:\r\n        case ActionTypes.DELETE_COMMENT_FAILED:\r\n            return {\r\n                ...state,\r\n                errMess: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","\r\n\r\n\r\nexport const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contectType: 'Tel.',\r\n    message: ''\r\n\r\n}\r\n\r\n\r\n\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    user: null,\r\n    token: null,\r\n    isAuthenticated: false\r\n}\r\n\r\n\r\nexport const login = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n\r\n            }\r\n        case ActionTypes.LOGIN_USER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                user: action.payload.user,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            }\r\n        case ActionTypes.LOGIN_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: action.payload,\r\n\r\n            }\r\n        case ActionTypes.LOGOUT_USER:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isLoading: false,\r\n                isAuthenticated: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes'\r\n\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    favorites: [],\r\n    addStatus: '',\r\n    delStatus: ''\r\n}\r\nexport const favorites = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_FAVORITES_LOADING:\r\n        case ActionTypes.ADD_FAVORITE_LOADING:\r\n        case ActionTypes.DELETE_FAVORITE_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case ActionTypes.GET_FAVORITES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                favorites: action.payload\r\n            }\r\n        case ActionTypes.ADD_FAVORITE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                addStatus: action.payload\r\n            }\r\n        case ActionTypes.DELETE_FAVORITE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                delStatus: action.payload\r\n            }\r\n        case ActionTypes.DELETE_FAVORITE_FAILED:\r\n        case ActionTypes.GET_FAVORITES_FAILED:\r\n        case ActionTypes.ADD_FAVORITE_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    reservations: []\r\n}\r\n\r\nexport const reservations = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.RESERVATIONS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case ActionTypes.RESERVATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                reservations: action.payload,\r\n                isLoading: false\r\n            }\r\n        case ActionTypes.RESERVATIONS_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialAddState = {\r\n    isLoading: false,\r\n    errMess: null,\r\n    status: null\r\n}\r\n\r\nexport const add_reservation = (state = initialAddState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_RESERVATION_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n\r\n        case ActionTypes.ADD_RESERVATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                status: action.payload\r\n            }\r\n        case ActionTypes.ADD_RESERVATION_FAILED:\r\n            return {\r\n                ...state,\r\n                errMess: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FooterComponent = () => {\r\n    return (\r\n        <footer >\r\n            <div className=\"footer\">\r\n                <div className='container'>\r\n                    <div className=\"row mr-0\" >\r\n                        <div className=\"col-4 offset-1 col-sm-2\">\r\n                            <h5>Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><Link to=\"/home\">Home</Link></li>\r\n                                <li><Link to=\"/aboutus\">About</Link></li>\r\n                                <li><Link to=\"/menu\">Menu</Link></li>\r\n                                <li><Link to=\"/contactus\">Contact</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-7 col-sm-5  align-self-center\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                                121, Clear Water Bay Road<br />\r\n                                Clear Water Bay, Kowloon<br />\r\n                                    HONG KONG<br />\r\n                                <i className=\"fa fa-phone fa-lg\"></i> +852 1234 5678<br />\r\n                                <i className=\"fa fa-fax fa-lg\"></i> +852 8765 4321<br />\r\n                                <i className=\"fa fa-envelope fa-lg\"></i> <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-4  align-self-center\">\r\n                            <div className=\"text-center d-flex flex-row justify-content-around\">\r\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i\r\n                                    className=\"fa fa-google-plus fa-lg\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i\r\n                                    className=\"fa fa-facebook fa-lg\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i\r\n                                    className=\"fa fa-linkedin fa-lg\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i\r\n                                    className=\"fa fa-twitter fa-lg\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i\r\n                                    className=\"fa fa-youtube fa-lg\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-\" href=\"mailto:\"><i className=\"fa fa-envelope-o fa-lg\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center mr-0\">\r\n                        <div className=\"col-auto\">\r\n                            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React, { Component } from 'react';\n\n\n\nimport MainComponent from './components/MainComponent'\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore'\nimport Footer from './components/FooterComponent'\n\nconst store = ConfigureStore();\nclass App extends Component {\n\n\n\n  render() {\n    return (\n      <Provider store={store}>\n\n        <BrowserRouter>\n          <div className=\"MainApp\">\n\n\n            <div className=\"App\">\n\n              <MainComponent />\n            </div>\n            <Footer />\n          </div>\n        </BrowserRouter>\n\n      </Provider>\n\n    )\n  }\n\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { createForms } from 'react-redux-form'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { Dishes, dishWithId } from './dishes'\r\nimport { Promotions } from './promotions'\r\nimport { Leaders } from './leaders'\r\nimport { comments } from './comments'\r\nimport { InitialFeedback } from './forms'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { login } from './login'\r\nimport { favorites } from './favorites'\r\nimport { reservations } from './reservations'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            comments: comments,\r\n            dishWithId: dishWithId,\r\n            login: login,\r\n            favorites: favorites,\r\n            reservations: reservations,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n\r\n        }),\r\n        composeWithDevTools(applyMiddleware(thunk, logger))\r\n    )\r\n    return store\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}